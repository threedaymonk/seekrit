#! /usr/bin/ruby1.8
require 'seekrit/store'
require 'seekrit/interactor'
require 'highline/import'
require 'fileutils'

SEEKRIT_DIR = File.join(ENV["HOME"], ".config", "seekrit")
PRE_LOAD    = "pre-load"
POST_SAVE   = "post-save"
SECRETS     = "secrets"

def run(file)
  return unless File.exist?(file)
  system "./#{file}"
end

def interactor(&blk)
  FileUtils.mkdir_p SEEKRIT_DIR
  Dir.chdir SEEKRIT_DIR
  run PRE_LOAD
  FileUtils.touch SECRETS unless File.exist?(SECRETS)
  File.open(SECRETS, "r+") do |file|
    begin
      password = lambda{ ask('Enter password: '){ |q| q.echo = false } }
      store = Seekrit::Store.new(password, file)
      yield Seekrit::Interactor.new(store)
    rescue Seekrit::PasswordError => err
      puts err.message
      exit 1
    end
  end
  run POST_SAVE
end

command = ARGV.shift
names = ARGV
case command
when 'show', 's'
  interactor{ |i| i.show names }
when 'edit', 'e'
  interactor{ |i| i.edit names }
when 'list', 'l'
  interactor{ |i| i.list names }
when 'delete'
  interactor{ |i| i.delete names }
when 'rename'
  interactor{ |i| i.rename names.shift, names.shift }
when 'export'
  interactor{ |i| i.export names.shift }
when 'import'
  interactor{ |i| i.import names.shift }
else
  puts "Unknown command '#{command}'", '' if command
puts <<END
list                      List all entries.
show name(s)              Show matching entries.
edit name(s)              Create or modify entries.
delete name(s)            Delete entries.
rename old_name new_name  Rename entry.
END
end
